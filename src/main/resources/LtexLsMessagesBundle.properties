# Copyright (C) 2019-2023 Julian Valentin, LTeX Development Community
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# suppress inspection "InconsistentResourceBundle" for whole file

addAllUnknownWordsInSelectionToDictionary = Add all unknown words in selection to dictionary
addWordToDictionary = Add '{0}' to dictionary
cancelingCheckDueToIncomingCheckRequest = Canceling check due to incoming check request...
cancelingCheckDueToLspCancelNotification = Canceling check due to LSP cancel notification...
characterBasedCodeAnnotatedTextBuilderInfiniteLoop = \
    Infinite loop in CharacterBasedCodeAnnotatedTextBuilder. This is a \
    bug in LTeX. Please file a bug report at https://github.com/valentjn/ltex-ls/issues and \
    attach the document (or some equivalent example) for which this occurred.
characterBasedCodeAnnotatedTextBuilderPreventedInfiniteLoop = \
    Prevented infinite loop in CharacterBasedCodeAnnotatedTextBuilder by skipping a character. \
    Subsequent parsing may be wrong. This is a \
    bug in LTeX. Please file a bug report at https://github.com/valentjn/ltex-ls/issues and \
    attach the document (or some equivalent example) for which this occurred.
checkingDocument = Checking document
checkingDone = Checking done in {0}ms
checkingText = Checking the following text in language '{0}' via LanguageTool: "{1}"{2}
connectedToClientOnPort = Connected to client on port {0}
couldNotDeleteTemporaryDirectory = Could not delete temporary directory '{0}'
couldNotDeleteTemporaryFile = Could not delete temporary file '{0}'
couldNotDeterminePlainTextPositions = Could not determine plain text positions: \
    Original text positions {0} and {1}, computed plain text positions {2} and {3}
couldNotFindDocumentWithUri = Could not find document with URI '{0}'
couldNotFindExpectedGroupInRegularExpressionMatch = Could not find expected group '{0}' in \
    regular expression match, skipping match
couldNotFindFragmentForMatch = Could not find fragment for unknown match, ignoring match
couldNotFindSettingsInMatch = Could not find settings in match
couldNotLoadFalseFriendRules = Could not load false friend rules from '{0}', disabling them
couldNotLoadLanguageModel = Could not load language model rules from '{0}', disabling them
couldNotLoadNeuralNetworkModel = Could not load neural network model rules from '{0}', disabling \
    them
couldNotLoadWord2VecModel = Could not load word2vec model rules from '{0}', disabling them
couldNotParseDocumentUri = Could not parse the document URI
couldNotParseHttpServerUri = Could not parse the URI '{0}' of the LanguageTool HTTP server, \
    leaving HTTP client uninitialized, checking disabled
couldNotReadFile = Could not read file '{0}'
couldNotSendHttpRequestToLanguageTool = Could not send the HTTP request to the LanguageTool \
    server
couldNotWriteFile = Could not write file '{0}'
disableAllRulesWithMatchesInSelection = Disable all rules with matches in selection
disableRule = Disable rule
exitingLtexLs = Exiting ltex-ls...
followingExceptionOccurred = The following exception occurred:
hidFalsePositive = Hid 1 false positive
hidFalsePositives = Hid {0} false positives
hideAllFalsePositivesInTheSelectedSentences = Hide all false positives in the selected sentences
hideFalsePositive = Hide false positive
hidingFalsePositive = Hiding false positive with rule '{0}' and sentence '{1}'
ignoreEnvironmentEndPatternNotSet = ignoreEnvironmentEndPattern not set
ignoringMalformedInlineSetting = Ignoring malformed inline setting '{0}'
ignoringUnknownInlineSetting = Ignoring unknown inline setting with name '{0}' and value '{1}"'
initializingLtexLs = ltex-ls {0} - initializing...
inputDocumentsAndSettingsFileAreDeprecated = --input-documents and --settings-file are deprecated \
    and will be removed in a future release. Use ltex-cli instead.
invalidBabelEnvironment = Invalid babel environment '{0}'
invalidBabelInlineCommand = Invalid babel inline command '{0}'
invalidCommandPrototype = Invalid command prototype '{0}'
languageToolFailed = LanguageTool failed
languageToolFailedWithStatusCode = LanguageTool failed with HTTP status code {0}
notARecognizedLanguage = '{0}' is not a recognized language. Leaving LanguageTool uninitialized, \
    checking disabled.
obtainedRuleMatch = Obtained 1 rule match
obtainedRuleMatches = Obtained {0} rule matches
reinitializingLanguageToolDueToDifferentSettings = Reinitializing LanguageTool due to different \
    settings for language '{0}': {1}
settingLocale = Setting locale to '{0}'
shuttingDownLtexLs = Shutting down ltex-ls...
skippingTextCheckAsLanguageToolHasNotBeenInitialized = Skipping text check as LanguageTool has \
    not been initialized
skippingTextCheckAsLtexHasBeenDisabled = Skipping text check as LTeX has been disabled for files \
    with code language ID '{0}' via ltex.enabled
truncatedPostfix = ... (truncated to {0} characters)
unknownBabelLanguage = Unknown babel language '{0}', ignoring
unknownCommand = Unknown command '{0}', ignoring
unsupportedCodeLanguageId = Unsupported code language ID '{0}', treating text as plaintext
useWord = Use '{0}'
useWordAllSelectedMatches = Use '{0}' (all selected matches)
waitingForClientToConnectOnPort = Waiting for client to connect on port {0}...
